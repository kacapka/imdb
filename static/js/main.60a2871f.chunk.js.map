{"version":3,"sources":["api/config.js","api/api.js","context/AppContext.js","components/SearchInput.js","components/SearchButton.js","components/Search.js","components/MovieList.js","components/App.js","reportWebVitals.js","index.js"],"names":["config","url","path","fetch","then","data","json","search","this","fetchApi","AppContext","React","createContext","movies","fetchMovies","loading","error","ContextProvider","children","useState","setMovies","setLoading","setError","a","Api","response","Error","Search","Provider","value","SearchInput","onChange","className","placeholder","SearchButton","type","setValue","useContext","onSubmit","e","preventDefault","target","MovieList","map","movie","Title","imdbID","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAaA,EACJ,WAIIC,EAAG,UAHN,yBAGM,mBAA+BD,GCOhC,M,iGATLE,GACR,OAAOC,MAAMD,GAAME,MAAK,SAAAC,GAAI,OAAIA,EAAKC,Y,kCAG1BC,GACX,OAAOC,KAAKC,SAAL,UAAiBR,EAAjB,cAA0BM,Q,MCLtBG,EAAaC,IAAMC,cAAc,CAC7CC,OAAQ,GACRC,YAAa,aACbC,SAAS,EACTC,OAAO,IA2BOC,EAxBS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACbC,mBAAS,IADI,mBAClCN,EADkC,KAC1BO,EAD0B,OAEXD,oBAAS,GAFE,mBAElCJ,EAFkC,KAEzBM,EAFyB,OAGfF,oBAAS,GAHM,mBAGlCH,EAHkC,KAG3BM,EAH2B,KAKnCR,EAAW,uCAAG,WAAMP,GAAN,eAAAgB,EAAA,6DACnBF,GAAW,GACXC,GAAS,GAFU,SAGIE,EAAIV,YAAYP,GAHpB,QAGbkB,EAHa,QAINC,MACZJ,EAASG,EAASC,OAElBN,EAAUK,EAASE,QAEpBN,GAAW,GATQ,2CAAH,sDAYjB,OACC,cAACX,EAAWkB,SAAZ,CAAqBC,MAAO,CAAEhB,SAAQC,cAAaC,UAASC,SAA5D,SACEE,KChBWY,EAXK,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAC7B,OACC,uBACCC,UAAU,QACVH,MAAOA,EACPE,SAAUA,EACVE,YAAY,YCFAC,EAJM,WACpB,OAAO,wBAAQC,KAAK,SAAb,qBCuBOR,EArBA,WAAO,IAAD,EACMR,mBAAS,IADf,mBACbU,EADa,KACNO,EADM,KAEZtB,EAAgBuB,qBAAW3B,GAA3BI,YAWR,OACC,uBAAMwB,SANmB,SAAAC,GACzBA,EAAEC,iBACF1B,EAAYe,IAIZ,UACC,cAAC,EAAD,CAAaA,MAAOA,EAAOE,SAXN,SAAAQ,GACtBH,EAASG,EAAEE,OAAOZ,UAWjB,cAAC,EAAD,QCHYa,EAfG,WAAO,IAAD,EACYL,qBAAW3B,GAAtCG,EADe,EACfA,OAAQE,EADO,EACPA,QAASC,EADF,EACEA,MAQzB,OAAID,EAAgB,aAChBC,GANIH,EAAO8B,KAAI,SAAAC,GACjB,OAAO,8BAAyBA,EAAMC,OAArBD,EAAME,YCMXC,EATH,kBACX,qBAAKf,UAAU,YAAf,SACC,eAAC,EAAD,WACC,cAAC,EAAD,IACA,cAAC,EAAD,UCGYgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.60a2871f.chunk.js","sourcesContent":["export const config = {\n\tapiKey: 'c2a23420',\n\tbaseUrl: 'http://www.omdbapi.com'\n};\n\nexport const url = `${config.baseUrl}?apikey=${config.apiKey}`;\n","import { url } from './config';\n\nclass Api {\n\tfetchApi(path) {\n\t\treturn fetch(path).then(data => data.json());\n\t}\n\n\tfetchMovies(search) {\n\t\treturn this.fetchApi(`${url}&s=${search}`);\n\t}\n}\n\nexport default new Api();\n","import React, { useState } from 'react';\nimport Api from '../api/api';\n\nexport const AppContext = React.createContext({\n\tmovies: [],\n\tfetchMovies: () => {},\n\tloading: false,\n\terror: false\n});\n\nconst ContextProvider = ({ children }) => {\n\tconst [movies, setMovies] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(false);\n\n\tconst fetchMovies = async search => {\n\t\tsetLoading(true);\n\t\tsetError(false);\n\t\tconst response = await Api.fetchMovies(search);\n\t\tif (response.Error) {\n\t\t\tsetError(response.Error);\n\t\t} else {\n\t\t\tsetMovies(response.Search);\n\t\t}\n\t\tsetLoading(false);\n\t};\n\n\treturn (\n\t\t<AppContext.Provider value={{ movies, fetchMovies, loading, error }}>\n\t\t\t{children}\n\t\t</AppContext.Provider>\n\t);\n};\n\nexport default ContextProvider;\n","import React from 'react';\n\nconst SearchInput = ({ value, onChange }) => {\n\treturn (\n\t\t<input\n\t\t\tclassName=\"input\"\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tplaceholder=\"search\"\n\t\t/>\n\t);\n};\n\nexport default SearchInput;\n","import React from 'react';\n\nconst SearchButton = () => {\n\treturn <button type=\"submit\">szukaj</button>;\n};\n\nexport default SearchButton;\n","import React, { useState, useContext } from 'react';\nimport SearchInput from './SearchInput';\nimport SearchButton from './SearchButton';\nimport { AppContext } from '../context/AppContext';\n\nconst Search = () => {\n\tconst [value, setValue] = useState('');\n\tconst { fetchMovies } = useContext(AppContext);\n\n\tconst handleOnChange = e => {\n\t\tsetValue(e.target.value);\n\t};\n\n\tconst handleFetchMovies = e => {\n\t\te.preventDefault();\n\t\tfetchMovies(value);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleFetchMovies}>\n\t\t\t<SearchInput value={value} onChange={handleOnChange} />\n\t\t\t<SearchButton />\n\t\t</form>\n\t);\n};\n\nexport default Search;\n","import React, { useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst MovieList = () => {\n\tconst { movies, loading, error } = useContext(AppContext);\n\n\tconst renderList = () => {\n\t\treturn movies.map(movie => {\n\t\t\treturn <div key={movie.imdbID}>{movie.Title}</div>;\n\t\t});\n\t};\n\n\tif (loading) return 'loading...';\n\tif (error) return error;\n\n\treturn renderList();\n};\n\nexport default MovieList;\n","import React from 'react';\nimport ContextProvider from '../context/AppContext';\nimport Search from './Search';\nimport MovieList from './MovieList';\n\nconst App = () => (\n\t<div className=\"container\">\n\t\t<ContextProvider>\n\t\t\t<Search />\n\t\t\t<MovieList />\n\t\t</ContextProvider>\n\t</div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}